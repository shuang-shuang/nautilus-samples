/*
 * Copyright (c) 2017 Dell Inc., or its subsidiaries. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 */
buildscript {
    repositories {
        mavenLocal()
        if (findProperty("repositoryUrl")) {
            maven {
                url findProperty("repositoryUrl")
            }
        }
        else {
            maven {
                url "https://plugins.gradle.org/m2/"
            }
            jcenter()
            mavenCentral()
        }
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    apply plugin: "idea"
    apply plugin: "eclipse"

    group "io.pravega.samples"
    version projectVersion

    repositories {
        mavenLocal()
        if (findProperty("repositoryUrl")) {
            maven {
                url findProperty("repositoryUrl")
            }
        }
        else {
            jcenter()
            mavenCentral()
            maven {
                url "https://repository.apache.org/snapshots"
            }
            maven {
                url "https://oss.sonatype.org/content/repositories/snapshots"
            }
            //TODO temporarily enabled staging repository to pull Flink 1.4.0-RC3 since it is not published yet to maven central
            maven {
                url "https://repository.apache.org/content/repositories/orgapacheflink-1141/"
            }
        }
    }
    apply from: "${rootDir}/gradle/java.gradle"
    apply from: "${rootDir}/gradle/publishing.gradle"
}

task sourceZip(type: Zip) {
    from projectDir
    destinationDir = buildDir

    baseName = rootProject.name
    version = project.version
    classifier = 'source'

    exclude "gradlew*"
    exclude "gradle/wrapper/**"
    exclude ".gradle/"
    exclude "**/build/**"
    exclude "**/out/**"
    exclude "**/*.ipr"
    exclude "**/*.iws"
    exclude "**/*.iml"
}

apply plugin: "maven-publish"
publishing {
    publications {
        allSource(MavenPublication) {
            artifact sourceZip
        }
    }
}